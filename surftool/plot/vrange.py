# Phase velocity map color levels
LEVELS_C = {
    # 8: np.concatenate(([0], np.arange(1))),
    10: [2.85, 3.05, 3.15, 3.25, 3.45],
    12: [2.85, 3.05, 3.15, 3.25, 3.45],
    20: [3.25, 3.35, 3.45, 3.55, 3.65],
    # 24: [3, 3.25, 3.35, 3.45, 3.55, 3.65, 3.75, 3.85, 4.1],
    24: [3.3, 3.55, 3.8],
    30: [3.45, 3.55, 3.65, 3.75, 3.95],
    # 40: np.concatenate(([3.57], np.linspace(3.67, 3.82, 4), [3.92, 4.02])),
    40: [3.57, 3.7, 3.75, 3.85, 4.05],
    50: [3.65, 3.75, 3.85, 3.95, 4.05, 4.15],
    # 60: [3.7, 3.8, 3.9, 4, 4.1, 4.2],
    60: [3.67, 3.8, 3.85, 3.95, 4.15],
    70: [3.75, 3.85, 3.9, 4, 4.2],
    80: [3.8, 3.85, 3.9, 3.93, 3.98, 4.08, 4.18],
    # 80: [3.75, 4.25],
    # 90: [3.8, 3.95, 4, 4.05, 4.2],
    # 100: [3.85, 4, 4.1, 4.2, 4.35],
}

LEVELS_C_JDF = {
    # 10: [2.65, 3, 3.15, 3.45, 3.7],
    10: [2.6, 3, 3.1, 3.6, 3.75],
    # 20: [3.2, 3.35, 3.45, 3.7, 3.95],
    20: [3.2, 3.35, 3.5, 3.7, 3.95],
    24: [3.3, 3.4, 3.5, 3.7, 3.95],
    30: [3.45, 3.55, 3.65, 3.75, 3.95],
    32: [3.55, 3.65, 3.75, 3.85, 3.95],
    40: [3.6, 3.7, 3.75, 3.85, 4],
    50: [3.65, 3.75, 3.85, 3.95, 4.0],
    60: [3.67, 3.8, 3.85, 3.95, 4.15],
    80: [3.8, 3.9, 3.95, 4, 4.15],
}

LEVELS_C_AK_Ray = {
    8: [2.3, 2.6, 2.9, 3.2, 3.4],
    10: [2.3, 2.6, 2.9, 3.2, 3.5],
    20: [3.25, 3.35, 3.45, 3.55, 3.65],
    22: [3.25, 3.35, 3.45, 3.55, 3.65],
    28: [3.5, 3.6, 3.7, 3.8, 3.9],
    30: [3.5, 3.6, 3.7, 3.8, 3.9],
    32: [3.55, 3.65, 3.75, 3.85, 3.95],
    40: [3.65, 3.75, 3.85, 3.95, 4.05],
    50: [3.7, 3.8, 3.9, 4. , 4.1],
    60: [3.75, 3.85, 3.95, 4.05, 4.15],
    70: [3.8  , 3.9, 4.0 , 4.1, 4.15],
    80: [3.8  , 3.9, 4.0 , 4.1, 4.2 ],
}

LEVELS_C_AA_Ray = {
    8: [2.3, 2.6, 2.9, 3.2, 3.4],
    10: [2.4, 2.6, 2.8, 3.0, 3.2, 3.4],
    12: [2.4, 2.6, 2.8, 3.0, 3.2, 3.4],    
    16: [3.0, 3.1, 3.2, 3.3, 3.4],   
    20: [3.25, 3.35, 3.45, 3.55, 3.65, 3.75],
    22: [3.25, 3.35, 3.45, 3.55, 3.65],
    28: [3.5, 3.6, 3.7, 3.8, 3.9],
    30: [3.5, 3.6, 3.7, 3.8, 3.9],
    32: [3.55, 3.65, 3.75, 3.85, 3.95],
    40: [3.60, 3.70, 3.8, 3.9, 4.0],
    50: [3.7, 3.8, 3.9, 4. , 4.1],
    60: [3.7, 3.8, 3.9, 4.0, 4.1], #[3.75, 3.85, 3.95, 4.05, 4.15],
    70: [3.8  , 3.9, 4.0 , 4.1, 4.15],
    80: [3.75, 3.85, 3.95, 4.05, 4.15], #[3.8, 3.9, 4.0, 4.15],
}

LEVELS_C_AK_Lov = {
    10: [2.6  , 2.925, 3.25 , 3.575, 3.9 ],
    20: [3.2, 3.4, 3.6, 3.8, 4.],
    22: [3.2, 3.4, 3.6, 3.8, 4.],
    30: [3.8, 3.9, 4.0 , 4.1, 4.2],
    40: [4.0 , 4.1, 4.2, 4.3, 4.40],
    50: [4.1, 4.2 , 4.3, 4.4 , 4.45],
    60: [4.2 , 4.3,  4.4 , 4.5, 4.55 ],
    70: [4.35, 4.4, 4.475 , 4.55, 4.6],
    80: [4.25, 4.35 , 4.45,  4.55, 4.65, 4.75],
    85: [4.25, 4.35 , 4.45,  4.55, 4.65, 4.75],
}


# # Group velocity map color levels
# LEVELS_U = {
#     # 8: np.concatenate(([0], np.arange(1))),
#     10: [2.4, 2.8, 3.2],
#     20: [2.7, 2.9, 3, 3.2],
#     28: [2.9, 3.3, 3.7],
#     40: [3.15, 3.4, 3.5, 3.6, 3.85],
#     # 60: [3.65, 3.75, 3.8, 3.85, 3.9, 4, 4.1],
#     60: [3.7, 3.8, 3.85, 3.95, 4.1],
# }

# T2PCT = {
#     10: [-20, -7, -3, 0, 3, 7],
#     20: [-7, -4, 0, 2, 5],
#     40: [-6, -3, 0, 3, 6],
#     60: [-6, -3, 0, 3, 6],
# }


def minmax_pv(per):
    """
    Return min & max.
    """
    if per <= 8:
        vmin = 2.7
        vmax = 3.4
    elif per <= 10:
        vmin = 2.9
        vmax = 3.4
    elif per <= 12:
        vmin = 2.8
        vmax = 3.5
    elif per <= 14:
        vmin = 2.85
        vmax = 3.55
    elif per <= 16:
        vmin = 2.95
        vmax = 3.65
    elif per <= 18:
        vmin = 3
        vmax = 3.7
    elif per <= 20:
        vmin = 3.25
        vmax = 3.65
    elif per <= 24:
        vmin = 3
        vmax = 4.1
        # vmin = 3.2
        # vmax = 3.9
    elif per <= 26:
        vmin = 3.4
        vmax = 3.8
    elif per <= 28:
        vmin = 3.45
        vmax = 3.85
    elif per <= 30:
        vmin = 3.5
        vmax = 3.9
    elif per <= 36:
        vmin = 3.55
        vmax = 4
    elif per <= 40:
        vmin = 3.6
        vmax = 4.05
    elif per <= 50:
        vmin = 3.65
        vmax = 4.15
    elif per <= 60:
        vmin = 3.7
        vmax = 4.15
    elif per <= 80:
        vmin = 3.8
        vmax = 4.2
    elif per <= 100:
        vmin = 3.85
        vmax = 4.25
    else:
        vmin = None
        vmax = None

    return vmin, vmax
